{"sources": {"/src/contracts/test-fuzzing/exercise4/Token.sol": {"AST": {"absolutePath": "Token.sol", "exportedSymbols": {"Ownership": [27], "Pausable": [61], "Token": [143]}, "id": 144, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.8", ".7"], "nodeType": "PragmaDirective", "src": "33:22:0"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 2, "nodeType": "StructuredDocumentation", "src": "57:410:0", "text": " @notice test transfer function by using assertions:\n 1. msg.sender must have its initial balance or less.\n 2. to must have its initial balance or more.\n @notice also there are two ways to run this contract\n @dev the first way to run: $ echidna-test Token.sol --test-mode assertion --contract Token\n @dev the second way to run: $ echidna-test Token.sol --config config.yaml --contract Token"}, "fullyImplemented": true, "id": 27, "linearizedBaseContracts": [27], "name": "Ownership", "nameLocation": "478:9:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 6, "mutability": "mutable", "name": "owner", "nameLocation": "502:5:0", "nodeType": "VariableDeclaration", "scope": 27, "src": "494:26:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3, "name": "address", "nodeType": "ElementaryTypeName", "src": "494:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"expression": {"id": 4, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "510:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "510:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"body": {"id": 14, "nodeType": "Block", "src": "541:35:0", "statements": [{"expression": {"id": 12, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "551:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 10, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "559:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 11, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "559:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "551:18:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 13, "nodeType": "ExpressionStatement", "src": "551:18:0"}]}, "id": 15, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 7, "nodeType": "ParameterList", "parameters": [], "src": "538:2:0"}, "returnParameters": {"id": 8, "nodeType": "ParameterList", "parameters": [], "src": "541:0:0"}, "scope": 27, "src": "527:49:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 25, "nodeType": "Block", "src": "601:56:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 21, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 18, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "619:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 19, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "628:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "628:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "619:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 17, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "611:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 22, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "611:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23, "nodeType": "ExpressionStatement", "src": "611:28:0"}, {"id": 24, "nodeType": "PlaceholderStatement", "src": "649:1:0"}]}, "id": 26, "name": "isOwner", "nameLocation": "591:7:0", "nodeType": "ModifierDefinition", "parameters": {"id": 16, "nodeType": "ParameterList", "parameters": [], "src": "598:2:0"}, "src": "582:75:0", "virtual": false, "visibility": "internal"}], "scope": 144, "src": "469:190:0", "usedErrors": []}, {"abstract": false, "baseContracts": [{"baseName": {"id": 28, "name": "Ownership", "nodeType": "IdentifierPath", "referencedDeclaration": 27, "src": "682:9:0"}, "id": 29, "nodeType": "InheritanceSpecifier", "src": "682:9:0"}], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 61, "linearizedBaseContracts": [61, 27], "name": "Pausable", "nameLocation": "670:8:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 31, "mutability": "mutable", "name": "is_paused", "nameLocation": "703:9:0", "nodeType": "VariableDeclaration", "scope": 61, "src": "698:14:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 30, "name": "bool", "nodeType": "ElementaryTypeName", "src": "698:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"body": {"id": 39, "nodeType": "Block", "src": "742:47:0", "statements": [{"expression": {"arguments": [{"id": 35, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "760:10:0", "subExpression": {"id": 34, "name": "is_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "761:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 33, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "752:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 36, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "752:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 37, "nodeType": "ExpressionStatement", "src": "752:19:0"}, {"id": 38, "nodeType": "PlaceholderStatement", "src": "781:1:0"}]}, "id": 40, "name": "ifNotPaused", "nameLocation": "728:11:0", "nodeType": "ModifierDefinition", "parameters": {"id": 32, "nodeType": "ParameterList", "parameters": [], "src": "739:2:0"}, "src": "719:70:0", "virtual": false, "visibility": "internal"}, {"body": {"id": 49, "nodeType": "Block", "src": "828:33:0", "statements": [{"expression": {"id": 47, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 45, "name": "is_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "838:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 46, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "850:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "838:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 48, "nodeType": "ExpressionStatement", "src": "838:16:0"}]}, "functionSelector": "5c975abb", "id": 50, "implemented": true, "kind": "function", "modifiers": [{"id": 43, "kind": "modifierInvocation", "modifierName": {"id": 42, "name": "isOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 26, "src": "820:7:0"}, "nodeType": "ModifierInvocation", "src": "820:7:0"}], "name": "paused", "nameLocation": "804:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 41, "nodeType": "ParameterList", "parameters": [], "src": "810:2:0"}, "returnParameters": {"id": 44, "nodeType": "ParameterList", "parameters": [], "src": "828:0:0"}, "scope": 61, "src": "795:66:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 59, "nodeType": "Block", "src": "900:34:0", "statements": [{"expression": {"id": 57, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 55, "name": "is_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "910:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "922:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "910:17:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 58, "nodeType": "ExpressionStatement", "src": "910:17:0"}]}, "functionSelector": "046f7da2", "id": 60, "implemented": true, "kind": "function", "modifiers": [{"id": 53, "kind": "modifierInvocation", "modifierName": {"id": 52, "name": "isOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 26, "src": "892:7:0"}, "nodeType": "ModifierInvocation", "src": "892:7:0"}], "name": "resume", "nameLocation": "876:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 51, "nodeType": "ParameterList", "parameters": [], "src": "882:2:0"}, "returnParameters": {"id": 54, "nodeType": "ParameterList", "parameters": [], "src": "900:0:0"}, "scope": 61, "src": "867:67:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 144, "src": "661:275:0", "usedErrors": []}, {"abstract": false, "baseContracts": [{"baseName": {"id": 62, "name": "Pausable", "nodeType": "IdentifierPath", "referencedDeclaration": 61, "src": "956:8:0"}, "id": 63, "nodeType": "InheritanceSpecifier", "src": "956:8:0"}], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 143, "linearizedBaseContracts": [143, 61, 27], "name": "Token", "nameLocation": "947:5:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "27e235e3", "id": 67, "mutability": "mutable", "name": "balances", "nameLocation": "1006:8:0", "nodeType": "VariableDeclaration", "scope": 143, "src": "971:43:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 66, "keyType": {"id": 64, "name": "address", "nodeType": "ElementaryTypeName", "src": "979:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "971:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 65, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "990:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"body": {"id": 141, "nodeType": "Block", "src": "1085:390:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 82, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 77, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1103:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 80, "indexExpression": {"expression": {"id": 78, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1112:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 79, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1112:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1103:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 81, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "1127:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1103:29:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 85, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 83, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "1136:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 84, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1144:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1136:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1103:42:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 76, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1095:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 87, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1095:51:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 88, "nodeType": "ExpressionStatement", "src": "1095:51:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 95, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 90, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1164:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "307830", "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1178:3:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 92, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1170:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 91, "name": "address", "nodeType": "ElementaryTypeName", "src": "1170:7:0", "typeDescriptions": {}}}, "id": 94, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1170:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1164:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 89, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1156:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1156:27:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 97, "nodeType": "ExpressionStatement", "src": "1156:27:0"}, {"assignments": [99], "declarations": [{"constant": false, "id": 99, "mutability": "mutable", "name": "init_balance_from", "nameLocation": "1202:17:0", "nodeType": "VariableDeclaration", "scope": 141, "src": "1194:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 98, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1194:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 104, "initialValue": {"baseExpression": {"id": 100, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1222:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 103, "indexExpression": {"expression": {"id": 101, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1231:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1231:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1222:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1194:48:0"}, {"assignments": [106], "declarations": [{"constant": false, "id": 106, "mutability": "mutable", "name": "init_balance_to", "nameLocation": "1260:15:0", "nodeType": "VariableDeclaration", "scope": 141, "src": "1252:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 105, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1252:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 110, "initialValue": {"baseExpression": {"id": 107, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1278:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 109, "indexExpression": {"id": 108, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1287:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1278:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1252:38:0"}, {"expression": {"id": 116, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 111, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1301:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 114, "indexExpression": {"expression": {"id": 112, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1310:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1310:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1301:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 115, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "1325:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1301:29:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 117, "nodeType": "ExpressionStatement", "src": "1301:29:0"}, {"expression": {"id": 122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 118, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1340:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 120, "indexExpression": {"id": 119, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1349:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1340:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 121, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "1356:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1340:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 123, "nodeType": "ExpressionStatement", "src": "1340:21:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 130, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 125, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1379:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 128, "indexExpression": {"expression": {"id": 126, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1388:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1388:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1379:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 129, "name": "init_balance_from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "1402:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1379:40:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 124, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "1372:6:0", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1372:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 132, "nodeType": "ExpressionStatement", "src": "1372:48:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 134, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1437:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 136, "indexExpression": {"id": 135, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1446:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1437:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 137, "name": "init_balance_to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 106, "src": "1452:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1437:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 133, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "1430:6:0", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1430:38:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 140, "nodeType": "ExpressionStatement", "src": "1430:38:0"}]}, "functionSelector": "a9059cbb", "id": 142, "implemented": true, "kind": "function", "modifiers": [{"id": 74, "kind": "modifierInvocation", "modifierName": {"id": 73, "name": "ifNotPaused", "nodeType": "IdentifierPath", "referencedDeclaration": 40, "src": "1073:11:0"}, "nodeType": "ModifierInvocation", "src": "1073:11:0"}], "name": "transfer", "nameLocation": "1030:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 72, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 69, "mutability": "mutable", "name": "to", "nameLocation": "1047:2:0", "nodeType": "VariableDeclaration", "scope": 142, "src": "1039:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 68, "name": "address", "nodeType": "ElementaryTypeName", "src": "1039:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 71, "mutability": "mutable", "name": "value", "nameLocation": "1059:5:0", "nodeType": "VariableDeclaration", "scope": 142, "src": "1051:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 70, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1051:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1038:27:0"}, "returnParameters": {"id": 75, "nodeType": "ParameterList", "parameters": [], "src": "1085:0:0"}, "scope": 143, "src": "1021:454:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 144, "src": "938:539:0", "usedErrors": []}], "src": "33:1445:0"}}}, "sourceList": ["/src/contracts/test-fuzzing/exercise4/Token.sol"], "contracts": {"/src/contracts/test-fuzzing/exercise4/Token.sol:Token": {"srcmap": "938:539:0:-:0;;;510:10;494:26;;;;;;;;;;;;;;;;;;;;938:539;;;;;;;;;;559:10;551:5;;:18;;;;;;;;;;;;;;;;;;938:539;;;;;;", "srcmap-runtime": "938:539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:67;;;:::i;:::-;;971:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:66;;;:::i;:::-;;1021:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;867:67;628:10;619:19;;:5;;;;;;;;;;:19;;;611:28;;;;;;922:5:::1;910:9:::0;::::1;:17;;;;;;;;;;;;;;;;;;867:67::o:0;971:43::-;;;;;;;;;;;;;;;;;:::o;795:66::-;628:10;619:19;;:5;;;;;;;;;;:19;;;611:28;;;;;;850:4:::1;838:9;;:16;;;;;;;;;;;;;;;;;;795:66::o:0;1021:454::-;761:9;;;;;;;;;;;760:10;752:19;;;;;;1127:5:::1;1103:8;:20;1112:10;1103:20;;;;;;;;;;;;;;;;:29;;:42;;;;;1144:1;1136:5;:9;1103:42;1095:51;;;::::0;::::1;;1178:3;1164:18;;:2;:18;;;;1156:27;;;::::0;::::1;;1194:25;1222:8;:20;1231:10;1222:20;;;;;;;;;;;;;;;;1194:48;;1252:23;1278:8;:12;1287:2;1278:12;;;;;;;;;;;;;;;;1252:38;;1325:5;1301:8;:20;1310:10;1301:20;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;1356:5;1340:8;:12;1349:2;1340:12;;;;;;;;;;;;;;;;:21;;;;;;;:::i;:::-;;;;;;;;1402:17;1379:8;:20;1388:10;1379:20;;;;;;;;;;;;;;;;:40;1372:48;;;;:::i;:::-;;1452:15;1437:8;:12;1446:2;1437:12;;;;;;;;;;;;;;;;:30;1430:38;;;;:::i;:::-;;1085:390;;1021:454:::0;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:118::-;1199:24;1217:5;1199:24;:::i;:::-;1194:3;1187:37;1112:118;;:::o;1236:222::-;1329:4;1367:2;1356:9;1352:18;1344:26;;1380:71;1448:1;1437:9;1433:17;1424:6;1380:71;:::i;:::-;1236:222;;;;:::o;1545:305::-;1585:3;1604:20;1622:1;1604:20;:::i;:::-;1599:25;;1638:20;1656:1;1638:20;:::i;:::-;1633:25;;1792:1;1724:66;1720:74;1717:1;1714:81;1711:107;;;1798:18;;:::i;:::-;1711:107;1842:1;1839;1835:9;1828:16;;1545:305;;;;:::o;1856:191::-;1896:4;1916:20;1934:1;1916:20;:::i;:::-;1911:25;;1950:20;1968:1;1950:20;:::i;:::-;1945:25;;1989:1;1986;1983:8;1980:34;;;1994:18;;:::i;:::-;1980:34;2039:1;2036;2032:9;2024:17;;1856:191;;;;:::o;2053:96::-;2090:7;2119:24;2137:5;2119:24;:::i;:::-;2108:35;;2053:96;;;:::o;2155:126::-;2192:7;2232:42;2225:5;2221:54;2210:65;;2155:126;;;:::o;2287:77::-;2324:7;2353:5;2342:16;;2287:77;;;:::o;2370:180::-;2418:77;2415:1;2408:88;2515:4;2512:1;2505:15;2539:4;2536:1;2529:15;2556:180;2604:77;2601:1;2594:88;2701:4;2698:1;2691:15;2725:4;2722:1;2715:15;2865:117;2974:1;2971;2964:12;2988:122;3061:24;3079:5;3061:24;:::i;:::-;3054:5;3051:35;3041:63;;3100:1;3097;3090:12;3041:63;2988:122;:::o;3116:::-;3189:24;3207:5;3189:24;:::i;:::-;3182:5;3179:35;3169:63;;3228:1;3225;3218:12;3169:63;3116:122;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610684806100a06000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063046f7da21461005157806327e235e31461005b5780635c975abb1461008b578063a9059cbb14610095575b600080fd5b6100596100b1565b005b61007560048036038101906100709190610460565b610125565b60405161008291906104dc565b60405180910390f35b61009361013d565b005b6100af60048036038101906100aa919061048d565b6101b2565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461010957600080fd5b60008060146101000a81548160ff021916908315150217905550565b60016020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019557600080fd5b6001600060146101000a81548160ff021916908315150217905550565b600060149054906101000a900460ff16156101cc57600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561021b5750600081115b61022457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561025e57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610335919061054d565b9250508190555082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461038b91906104f7565b9250508190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103e1576103e06105bd565b5b80600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104305761042f6105bd565b5b50505050565b60008135905061044581610620565b92915050565b60008135905061045a81610637565b92915050565b6000602082840312156104765761047561061b565b5b600061048484828501610436565b91505092915050565b600080604083850312156104a4576104a361061b565b5b60006104b285828601610436565b92505060206104c38582860161044b565b9150509250929050565b6104d6816105b3565b82525050565b60006020820190506104f160008301846104cd565b92915050565b6000610502826105b3565b915061050d836105b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610542576105416105ec565b5b828201905092915050565b6000610558826105b3565b9150610563836105b3565b925082821015610576576105756105ec565b5b828203905092915050565b600061058c82610593565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61062981610581565b811461063457600080fd5b50565b610640816105b3565b811461064b57600080fd5b5056fea2646970667358221220f52999c4300c5fb6c69e5b8eb3608a2ee9cd7195db5ba1ad642ee8da961c9ba164736f6c63430008070033", "bin-runtime": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063046f7da21461005157806327e235e31461005b5780635c975abb1461008b578063a9059cbb14610095575b600080fd5b6100596100b1565b005b61007560048036038101906100709190610460565b610125565b60405161008291906104dc565b60405180910390f35b61009361013d565b005b6100af60048036038101906100aa919061048d565b6101b2565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461010957600080fd5b60008060146101000a81548160ff021916908315150217905550565b60016020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019557600080fd5b6001600060146101000a81548160ff021916908315150217905550565b600060149054906101000a900460ff16156101cc57600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561021b5750600081115b61022457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561025e57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610335919061054d565b9250508190555082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461038b91906104f7565b9250508190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103e1576103e06105bd565b5b80600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104305761042f6105bd565b5b50505050565b60008135905061044581610620565b92915050565b60008135905061045a81610637565b92915050565b6000602082840312156104765761047561061b565b5b600061048484828501610436565b91505092915050565b600080604083850312156104a4576104a361061b565b5b60006104b285828601610436565b92505060206104c38582860161044b565b9150509250929050565b6104d6816105b3565b82525050565b60006020820190506104f160008301846104cd565b92915050565b6000610502826105b3565b915061050d836105b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610542576105416105ec565b5b828201905092915050565b6000610558826105b3565b9150610563836105b3565b925082821015610576576105756105ec565b5b828203905092915050565b600061058c82610593565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61062981610581565b811461063457600080fd5b50565b610640816105b3565b811461064b57600080fd5b5056fea2646970667358221220f52999c4300c5fb6c69e5b8eb3608a2ee9cd7195db5ba1ad642ee8da961c9ba164736f6c63430008070033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}, "/src/contracts/test-fuzzing/exercise4/Token.sol:Pausable": {"srcmap": "661:275:0:-:0;;;510:10;494:26;;;;;;;;;;;;;;;;;;;;661:275;;;;;;;;;;559:10;551:5;;:18;;;;;;;;;;;;;;;;;;661:275;;;;;;", "srcmap-runtime": "661:275:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:67;;;:::i;:::-;;795:66;;;:::i;:::-;;867:67;628:10;619:19;;:5;;;;;;;;;;:19;;;611:28;;;;;;922:5:::1;910:9:::0;::::1;:17;;;;;;;;;;;;;;;;;;867:67::o:0;795:66::-;628:10;619:19;;:5;;;;;;;;;;:19;;;611:28;;;;;;850:4:::1;838:9;;:16;;;;;;;;;;;;;;;;;;795:66::o:0", "abi": "[{\"inputs\":[],\"name\":\"paused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061016e806100a06000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063046f7da21461003b5780635c975abb14610045575b600080fd5b61004361004f565b005b61004d6100c3565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146100a757600080fd5b60008060146101000a81548160ff021916908315150217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011b57600080fd5b6001600060146101000a81548160ff02191690831515021790555056fea2646970667358221220a2c0cb479f8122373bf090cd32e11c3bc6e806624b0e60f7558446c8f5ce6c6264736f6c63430008070033", "bin-runtime": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063046f7da21461003b5780635c975abb14610045575b600080fd5b61004361004f565b005b61004d6100c3565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146100a757600080fd5b60008060146101000a81548160ff021916908315150217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011b57600080fd5b6001600060146101000a81548160ff02191690831515021790555056fea2646970667358221220a2c0cb479f8122373bf090cd32e11c3bc6e806624b0e60f7558446c8f5ce6c6264736f6c63430008070033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}, "/src/contracts/test-fuzzing/exercise4/Token.sol:Ownership": {"srcmap": "469:190:0:-:0;;;510:10;494:26;;;;;;;;;;;;;;;;;;;;527:49;;;;;;;;;;559:10;551:5;;:18;;;;;;;;;;;;;;;;;;469:190;;;;;;", "srcmap-runtime": "469:190:0:-:0;;;;;", "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "bin": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015604f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80609d6000396000f3fe6080604052600080fdfea26469706673582212200632735eafbb78d6dc9e56cb3cbf87eb629ab68921e3a2f91e3949f53d930cc764736f6c63430008070033", "bin-runtime": "6080604052600080fdfea26469706673582212200632735eafbb78d6dc9e56cb3cbf87eb629ab68921e3a2f91e3949f53d930cc764736f6c63430008070033", "userdoc": {"methods": {}, "notice": "test transfer function by using assertions: 1. msg.sender must have its initial balance or less. 2. to must have its initial balance or more.also there are two ways to run this contract"}, "devdoc": {"methods": {}, "author": null, "details": "the first way to run: $ echidna-test Token.sol --test-mode assertion --contract Tokenthe second way to run: $ echidna-test Token.sol --config config.yaml --contract Token", "title": null}}}}